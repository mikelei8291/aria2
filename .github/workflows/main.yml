# This is a basic workflow to help you get started with Actions

name: Build 64-bit Windows Binary

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Install and build dependencies
      env:
        HOST: x86_64-w64-mingw32
      run: |
        sudo apt update
        sudo apt install -y make binutils autoconf automake autotools-dev libtool pkg-config git curl dpkg-dev gcc-mingw-w64 g++-mingw-w64 autopoint libcppunit-dev libxml2-dev libgcrypt11-dev lzip
        wget https://gmplib.org/download/gmp/gmp-6.2.0.tar.lz https://github.com/libexpat/libexpat/releases/download/R_2_2_9/expat-2.2.9.tar.lz https://www.sqlite.org/2020/sqlite-autoconf-3320300.tar.gz https://zlib.net/zlib-1.2.11.tar.xz https://c-ares.haxx.se/download/c-ares-1.16.1.tar.gz https://www.libssh2.org/download/libssh2-1.9.0.tar.gz
        for f in *.tar.*z; do tar xf "$f"; done
        cd gmp-6.2.0
        ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --disable-cxx --enable-fat CFLAGS="-mtune=generic -O2 -g0"
        sudo make -j2 install
        cd ../expat-2.2.9
        ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE`
        sudo make -j2 install
        cd ../sqlite-autoconf-3320300
        ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE`
        sudo make -j2 install
        cd ../zlib-1.2.11
        CC=$HOST-gcc AR=$HOST-ar LD=$HOST-ld RANLIB=$HOST-ranlib STRIP=$HOST-strip ./configure --prefix=/usr/local/$HOST --libdir=/usr/local/$HOST/lib --includedir=/usr/local/$HOST/include --static
        sudo make -j2 install
        cd ../c-ares-1.16.1
        ./configure --disable-shared --enable-static --without-random --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` LIBS="-lws2_32"
        sudo make -j2 install
        cd ../libssh2-1.9.0
        ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` --without-openssl --with-wincng LIBS="-lws2_32"
        sudo make -j2 install
        sudo rm -rf *
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Checkout the latest tag
      run: git checkout $(git describe --tags --abbrev=0)
    - name: Edit OptionHandlerFactory.cc
      run: sed -i 's/16,/64,/g' src/OptionHandlerFactory.cc
    - name: Build aria2
      env:
        CXXFLAGS: -g -O2 -mwindows
      run: |
        autoreconf -i
        ./mingw-config
        make -j2
        $HOST-strip src/aria2c.exe
    - name: Run SSH
      uses: mxschmitt/action-tmate@v2
